import numpy as np
import matplotlib.pyplot as plt

# Параметры сигнала
frequencies = [10000, 5000, 2000]  # Частоты в Гц
amplitude = 5  # Амплитуда
duration = 1e-3  # Длительность сигнала в секундах (1 мс)
time_step = 1e-6  # Шаг моделирования в секундах (1 мкс)
t = np.arange(0, duration, time_step)  # Временная ось

# Запрещённая зона
lower_bound = 2
upper_bound = 4

# Функция для генерации треугольного сигнала
def triangular_wave(t, frequency, amplitude):
    period = 1 / frequency
    return amplitude * 2 * np.abs((t / period - np.floor(t / period + 0.5))) - amplitude / 2

# Генерация сигналов
signals = [triangular_wave(t, freq, amplitude) for freq in frequencies]

# Логический каскад
def logic_gate(signal, lower_bound, upper_bound):
    output = np.zeros_like(signal)
    state = 0  # Начальное состояние
    for i in range(len(signal)):
        if signal[i] > upper_bound:
            state = 5
        elif signal[i] < lower_bound:
            state = 0
        output[i] = state
    return output

# Применение логического каскада
digital_signals = [logic_gate(signal, lower_bound, upper_bound) for signal in signals]

# Визуализация
plt.figure(figsize=(12, 8))

for i, (signal, digital_signal, freq) in enumerate(zip(signals, digital_signals, frequencies)):
    plt.subplot(len(frequencies), 1, i + 1)
    plt.plot(t * 1e3, signal, label=f'Треугольный сигнал {freq / 1000} кГц')
    plt.plot(t * 1e3, digital_signal, label='Цифровой сигнал', linestyle='--')
    plt.axhline(upper_bound, color='r', linestyle=':', label='Верхняя граница запрещённой зоны')
    plt.axhline(lower_bound, color='g', linestyle=':', label='Нижняя граница запрещённой зоны')
    plt.xlabel('Время (мс)')
    plt.ylabel('Амплитуда')
    plt.legend()
    plt.grid()

plt.tight_layout()
plt.show()
