import numpy as np
import matplotlib.pyplot as plt

def generate_clock_signal(period=20, step=1, cycles=8):
    t = np.arange(0, cycles * period, step)
    clock = (t % period) < (period / 2)
    return t, clock

def encode_sdr(data, period=20, step=1):
    t = np.arange(0, len(data) * period, step)
    signal = np.repeat(data, period // step)
    return t, signal

def encode_ddr_fixed(data, period=20, step=1):
    t = np.arange(0, len(data) * period, step)
    signal = np.repeat(np.repeat(data, 2), period // (2 * step))
    return t[:len(signal)], signal

# Заданные данные в двоичном виде
data_7A = np.array([0,1,1,1,1,0,1,0])
data_FF = np.array([1,1,1,1,1,1,1,1])
data_0F = np.array([0,0,0,0,1,1,1,1])

# Генерация сигналов
t_clock, clock_signal = generate_clock_signal()
t_sdr, sdr_signal = encode_sdr(data_7A)
t_ddr_fixed, ddr_signal_fixed = encode_ddr_fixed(data_7A)

# Построение графиков
plt.figure(figsize=(10, 6))

plt.subplot(3, 1, 1)
plt.plot(t_clock, clock_signal, drawstyle='steps-post', label="Clock")
plt.legend()
plt.grid()

plt.subplot(3, 1, 2)
plt.plot(t_sdr, sdr_signal, drawstyle='steps-post', label="SDR 7A")
plt.legend()
plt.grid()

plt.subplot(3, 1, 3)
plt.plot(t_ddr_fixed, ddr_signal_fixed, drawstyle='steps-post', label="DDR 7A")
plt.legend()
plt.grid()

plt.xlabel("Time (µs)")
plt.show()
